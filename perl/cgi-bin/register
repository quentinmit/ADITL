#!/usr/bin/perl
use strict;

use lib "../lib";
use Database;
use Template;
use Cookie;
use Settings;
use Utils;
use Mail::RFC822::Address qw(valid validlist);

use CGI qw(-debug :standard);
use CGI::Carp('fatalsToBrowser');
$CGI::DISABLE_UPLOADS = 1;

my $cgi = CGI->new();
print $cgi->header();

my @params = $cgi->param();
unless(@params) {
    noParams();
}


my $fn = $cgi->param("firstname");
my $ln = $cgi->param("lastname");
my $email = $cgi->param("email");
my $pw = $cgi->param("password");
my $pw2 = $cgi->param("password2");
my $affiliation = $cgi->param("affiliation");

if($fn =~ /[^\w-]/ || $ln =~ /[^\w-]/) {
    formatError("your first and last name must contain only letters and numbers (and no spaces).", $fn, $ln, $email);
}

if($fn eq "" || $ln eq "") {
    formatError("Your first and last name cannot be empty.", $fn, $ln, $email);
}

if(length($fn) > 30 || length($ln) > 30) {
    formatError("Your first and last names cannot be longer than 30 characters, sorry.", $fn, $ln, $email);
}

unless($affiliation eq "undergrad" ||
       $affiliation eq "gradstudent" ||
       $affiliation eq "faculty" ||
       $affiliation eq "staff" ||
       $affiliation eq "admin" ||
       $affiliation eq "alum" ||
       $affiliation eq "other") {
    formatError("Please select an affiliation.", $fn, $ln, $email);
}

if($email =~ /\'/ || $email =~ /\"/) {
    formatError("Your email address doesn't look valid.", $fn, $ln, $email);
}

unless(valid($email)) {
    formatError("Your email address doesn't look valid.", $fn, $ln, $email);
}

unless($email =~ /mit\.edu$/i) {
    formatError("You must have an email address that ends in mit.edu.", $fn, $ln, $email);
}

if($pw =~ /\W/) {
    formatError("Your password must contain only letters and numbers (and no spaces).", $fn, $ln, $email);
}

if(length($pw) < 5) {
    formatError("Your password must be at least 5 characters long.", $fn, $ln, $email);
}

if(length($pw) > 30) {
    formatError("Your password cannot be longer than 30 characters.", $fn, $ln, $email);
}

if($pw ne $pw2) {
    formatError("The passwords you entered do not match.", $fn, $ln, $email);
}

my $db = Database->new();
my $status = $db->connect(Settings::settings("dbName"));
unless($status) {
    formatError("There was an error in processing your registration. It's not you, it's me. Really.", $fn, $ln, $email);
}

if($db->userExists($email)) {
    formatError("A user with this email address has already registered. If you've forgotten your password, you're in trouble. 
(Just kidding, email " . Settings::settings("email") . " to recover your password.)", $fn, $ln, $email);
}

my $validateToken = Cookie::createAuthToken();
my $uid = $db->registerUser("$fn", "$ln", "$email", "$pw", "$affiliation", $validateToken);

my $validateURL = Settings::settings("validateURL");
Utils::email($email, "ADITL\@aditl.mit.edu", "Complete ADITL registration--do not reply",
"To complete the registration for ADITL, visit the URL below. We will email you a reminder before the day of the event.
Your passsword is '$pw'. Email aditl\@mit.edu if you have questions or comments. Thanks for signing up.\n\n" .

$validateURL . "?uid=$uid&token=$validateToken");

print Utils::message("Your information looks good. We have sent an email to $email to verify the email address. To complete your registration, check your email and follow the instructions.");

exit;

sub noParams {
    #my $template = Settings::settings("templateLib") . "\/createprofile.html";
    ##my $msg = "registering with ADITL lets you upload your photos after the event and post comments. 
#you will also receive reminder emails before the day of the event in september. you must have a valid email ending in mit.edu to register. #please note
#that this site does not use encryption, so you probably don't want to use your athena password.";
    #my $html = Template::fillTemplate($template, [$msg, "", "", ""]);
    my $bgcolor = $cgi->param("bgc") or "ffffff";
    my $fgcolor = $cgi->param("fgc") or "333333";

    my $html = Template::fillTemplateNew(
        Settings::settings("templateLib") . "/login.tmpl",
           {
            bgColor => $bgcolor,
            Color => $fgcolor,
            page_login => 1
           }
        );
    print $html;
    exit;
}

sub formatError {
    my $msg = shift;
    my $fn = shift;
    my $ln = shift;
    my $email = shift;
    #my $template = Settings::settings("templateLib") . "\/createprofile.html";
    #my $html = Template::fillTemplate($template, [$msg, $fn, $ln, $email]);

    my $html = Template::fillTemplateNew(
        Settings::settings("templateLib") . "/login.tmpl",
           {
            page_login => 1,
            RegisterNoticeMessge => $msg,
            RegisterFilledEmail => $email,
            RegisterFilledFirstName => $fn,
            RegisterFilledLastName => $ln
           }
        );
    print $html;
    exit;
}
