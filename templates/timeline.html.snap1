templateStart
tBaseFragmentURL
tBaseJSFragmentURL
<template>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"	
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">	
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<title>
A Day in the Life of MIT 2005
</title>

<link rel="SHORTCUT ICON" href="http://aditl.mit.edu/favicon.ico">

<style type="text/css">
body {
background-color:#ffffff;
color:#292929;
font-family:helvetica, sans-serif;
}

.timeline-main {
background-color:#eeeeee;
position:absolute;
left:60px;
top:200px;
width:800px;
height:200px;
z-index:3;
border: 3px solid #ffa963;
}

.single-timeline {
background-color:#999999;
position:absolute;
width:200px;
height:15px;
border-top: 1px solid #ffa963;
border-bottom: 1px solid #ffa963;
z-index:1;
}

.tiny-thumbnail {
position:absolute;
}

.timeline-block {
position:absolute;
width:200px;
height:200px;
z-index:0;
}

.opaque-cover {
position:absolute;
z-index:1;
background-color:#ffffff;
}

.transparent {
filter:alpha(opacity=0);
opacity:0.0;
background-color:#000000;
position:absolute;
}

</style>

<script>

var colors = new Array("#FFCC00", "#F7C609", "#E9BE18", "#D9B32A", "#C7A53E", "#B39855", "#9D8A6C", "#8A7C82", "#766E98", "#6362AD", "#5357BE", "#464ECC", "#3F49D4");

function getColor(minute) {
var hour = (minute - (minute % 60)) / 60;

if(hour >= 12) {
    hour -= 12;
} else {
    hour = 12 - hour;
}

return colors[hour];
}


function setPageColor(minute) {}
    




//holds queue of div containers that hold the timeline
//should always be 6.
//middle 4 are displayed.
//6-8 are loaded / loading and ready to be moved
//1-2 are done and ready to be re-used.
var divContainers = new Array();

//start of visible timeline
var startTime = templateStart;

setPageColor(startTime);

function initTimeline() {
divContainers.push('block6');
divContainers.push('block1');
divContainers.push('block2');
divContainers.push('block3');
divContainers.push('block4');
divContainers.push('block5');

var url = "tBaseFragmentURL";
var jsurl = "tBaseJSFragmentURL";

var tstart = startTime - 15;
var tend = tstart + 15;
var url2 = url + "\&start=" + tstart + "\&end=" + tend;
var jsurl2 = jsurl + "\&start=" + tstart + "\&end=" + tend;

for(var i = 0; i < 6; i++) {
    loadXMLDoc(url2, divContainers[i]);
    evalXML(jsurl2);
    tstart += 15;
    tend +=15;
    url2 = url + "\&start=" + tstart + "\&end=" + tend;
    jsurl2 = jsurl + "\&start=" + tstart + "\&end=" + tend;

}
}

function next() {
if(startTime >= 1380) {
    return;
}

var nextId = divContainers.shift();
divContainers.push(nextId);

var nextToFill = document.getElementById(nextId);
nextToFill.style.left = "1000px";


var url = "tBaseFragmentURL";
var jsurl = "tBaseJSFragmentURL";
var endTime = startTime + 60;
var tstart = endTime + 15;

startTime += 15;
var tend = tstart + 15;

url = url + "\&start=" + tstart + "\&end=" + tend;
jsurl = jsurl + "\&start=" + tstart + "\&end=" + tend;


for(var i = 0; i < divContainers.length; i++) {
    moveElement(divContainers[i], -200, 0);
}

setPageColor(startTime);

loadXMLDoc(url, nextId);
evalXML(jsurl);
}


function prev() {
if(startTime <= 0) {
    return;
}

var nextId = divContainers.pop();
divContainers.unshift(nextId);

var nextToFill = document.getElementById(nextId);
nextToFill.style.left = "-200px";


var url = "tBaseFragmentURL";
var jsurl = "tBaseJSFragmentURL";
var tstart = startTime - 15;

startTime -= 15;
var tend = tstart + 15;

url = url + "\&start=" + tstart + "\&end=" + tend;
jsurl = jsurl + "\&start=" + tstart + "\&end=" + tend;


for(var i = 0; i < divContainers.length; i++) {
    moveElement(divContainers[i], 200, 0);
}

setPageColor(startTime);

loadXMLDoc(url, nextId);
evalXML(jsurl);
}






//array of objects that holds photo info.
var photoObjects = new Array();

//stuff to display individual photos
function addPhoto(realid, id, url, width, time, photog, caption, comments, number) {
//realid is actual phid, id is the photoid of the first in a sequence  that get
//bucketized.
    var pob;
    if(! (pob = pobExists(id))) {
        pob = createPob(id);
    }

    var preload = new Image();
    preload.src = url;

    pob.realid.push(realid);
    pob.times.push(time);
    pob.urls.push(url);
    pob.widths.push(width);
    pob.photogs.push(photog);
    pob.captions.push(caption);
    pob.comments.push(comments);
    pob.numbers.push(number);
}


function pobExists(id) {
    var i;

    for(i = 0; i < photoObjects.length; i++) {
        if(photoObjects[i].id == id) {
	    return photoObjects[i];
	}
    }

    return 0;
}

function createPob(id) {
    var pob = new Object();

    pob.id = id;
    pob.current = 0;
    pob.realid = new Array();
    pob.times = new Array();
    pob.urls = new Array();
    pob.widths = new Array();
    pob.photogs = new Array();
    pob.captions = new Array();
    pob.comments = new Array();
    pob.numbers = new Array();

    photoObjects.push(pob);
    return pob;
}

function photo1Click(id, slot) {
    var pob = pobExists(id);
    if(pob == 0) {
        alert('got empty pob for id ' + id);
        return;
    }

    if(pob.current >= pob.urls.length) {
        pob.current = 0;
    }

    var xpos = 500 - pob.widths[pob.current];
    if(slot == 1) {
        document.getElementById("area1").style.left = xpos + "px";
    } else if(slot == 2) {
        document.getElementById("area2").style.left = pob.widths[pob.current] + "px"
    }

    var photo = document.getElementById("photo" + slot);
    photo.src = pob.urls[pob.current];
    photo.style.visibility = "hidden";
    photo.style.visibility = "visible";


    document.getElementById("name" + slot).innerHTML = pob.photogs[pob.current];
    document.getElementById("time" + slot).innerHTML = pob.times[pob.current];
    document.getElementById("caption" + slot).innerHTML = pob.captions[pob.current];
    document.getElementById("comment" + slot).innerHTML = pob.comments[pob.current];

    var top = pob.current + 1;
    var bot = pob.urls.length;

    document.getElementById("number" + slot).innerHTML = top + " / " + bot;

    pob.current++;
}








//code for xmlHTTPRequest
var reqArray = new Array();

function loadXMLDoc(url, elementID) {
    var req;
    // branch for native XMLHttpRequest object
    if (window.XMLHttpRequest) {
        req = new XMLHttpRequest();
        req.onreadystatechange = processReqChanges;
        req.open("GET", url, true);
        req.send(null);
    // branch for IE/Windows ActiveX version
    } else if (window.ActiveXObject) {
        req = new ActiveXObject("Microsoft.XMLHTTP");
        if (req) {
            req.onreadystatechange = processReqChanges;
            req.open("GET", url, true);
            req.send(null);
        }
    }
    req.elementID = elementID;
    reqArray.push(req);
}

//checks for changes in any outstanding req's and 
//calls out to processReqChange to handle individual ones.
function processReqChanges() {
    var i;
    var req;
    for(i = 0; i < reqArray.length; i++) {
        req = reqArray[i];
        // only if req shows "loaded"
        if (req.readyState == 4) {
            // only if "OK"
            if (req.status == 200) {
	    //alert('xml came back');
                processReqChange(req);
	    
	        //remove this request since it's done yo.
	        reqArray.splice(i, 1);
            }
        }
    }
}

function processReqChange(req) {
    document.getElementById(req.elementID).innerHTML = req.responseText;
}


var jsReqArray = new Array();
function evalXML(url) {
    var req;
    // branch for native XMLHttpRequest object
    if (window.XMLHttpRequest) {
        req = new XMLHttpRequest();
        req.onreadystatechange = jsReqChanges;
        req.open("GET", url, true);
        req.send(null);
    // branch for IE/Windows ActiveX version
    } else if (window.ActiveXObject) {
        req = new ActiveXObject("Microsoft.XMLHTTP");
        if (req) {
            req.onreadystatechange = jsReqChanges;
            req.open("GET", url, true);
            req.send();
        }
    }
    reqArray.push(req);
}

function jsReqChanges() {
    var i;
    var req;
    for(i = 0; i < reqArray.length; i++) {
        req = reqArray[i];
        // only if req shows "loaded"
        if (req.readyState == 4) {
            // only if "OK"
            if (req.status == 200) {
	    //alert('xml came back');
                jsReqChange(req);
	    
	        //remove this request since it's done yo.
	        reqArray.splice(i, 1);
            }
        }
    }
}

function jsReqChange(req) {
    eval(req.responseText);
}











//movement stuff.
function moveElement(element, dX, dY) {
    var el = document.getElementById(element);
    var left = parseInt(el.style.left);
    var top = parseInt(el.style.top);

    left += dX;
    top += dY;

    el.style.left = left + "px";
    el.style.top = top + "px";
}
    


</script>

</head>
<body onLoad="initTimeline();">



<div id="area1" class="user-photo" style="position:absolute; top:30px; left:250px;">

<img id="photo1" src="http://aditl.mit.edu/aditl2/images/39/small/IMG_6530.jpg"
style="position:absolute; top:0px; left:0px; visibility:hidden;"></img>

<div id="time1" style="position:absolute; top:10px; left:-205px; width:200px; 
text-align:right; font-size:40px; color:#000000;"></div>

<div id="name1" style="position:absolute; top:50px; left:-205px; width:200px; 
text-align:right; font-size:25px; color:#888888;"></div>

<div id="caption1" style="position:absolute; top:90px; left:-205px; width:200px; 
text-align:right; font-size:18px; color:#888888;"></div>

<div id="comment1" style="position:absolute; top:110px; left:-205px; width:200px; 
text-align:right; font-size:18px; color:#888888;"></div>

<div id="number1" style="position:absolute; top:200px; left:-205px; width:200px; 
text-align:right; font-size:18px; color:#888888;"></div>
</div>



<div style="position:absolute; left:520px; top:30px;">
<img id="photo2" src="http://aditl.mit.edu/aditl2/images/39/small/IMG_6530.jpg"
style="position:absolute; top:0px; left:0px; visibility:hidden;"></img>

<div id="area2" style="position:absolute; left:0px; top:0px;">

<div id="time2" style="position:absolute; top:10px; left:5px; width:200px; 
text-align:left; font-size:40px; color:#000000;"></div>

<div id="name2" style="position:absolute; top:50px; left:5px; width:200px; 
text-align:left; font-size:25px; color:#888888;"></div>

<div id="caption2" style="position:absolute; top:90px; left:5px; width:200px; 
text-align:left; font-size:18px; color:#888888;"></div>

<div id="comment2" style="position:absolute; top:110px; left:5px; width:200px; 
text-align:left; font-size:18px; color:#888888;"></div>

<div id="number2" style="position:absolute; top:200px; left:5px; width:200px; 
text-align:left; font-size:18px; color:#888888;"></div>

</div>
</div>





<div class="timeline-main" id="mainblock" style="top:300px; left:150px;">

<div class="opaque-cover" style="width:100px; height:200px; left:-120px; top:0px;"></div>
<div class="opaque-cover" style="width:400px; height:200px; left:820px; top:0px;"></div>
<div class="opaque-cover" style="width:100px; height:25px; left:800px; top:0px;"></div>


<div style="position:absolute; left:-3px; top:0px; width:3px; height:200px;
background-color:#ffa963; z-index:3;"></div>

<div style="position:absolute; left:800px; top:0px; width:3px; height:200px;
background-color:#ffa963; z-index:3;"></div>






<div class="timeline-block" id="block1" style="top:0px; left:0px;">
</div>

<div class="timeline-block" id="block2" style="top:0px; left:200px;">
</div>

<div class="timeline-block" id="block3" style="top:0px; left:400px;">
</div>

<div class="timeline-block" id="block4" style="top:0px; left:600px;">
</div>

<div class="timeline-block" id="block5" style="top:0px; left:800px;">
</div>

<div class="timeline-block" id="block6" style="top:0px; left:-200px;">
</div>

</div>

<div style="border:3px solid #ffa963; position:absolute; left:50px; top:300px;
width:50px; height:200px; z-index:3;  background-color:#ffffff;
font-size:30px; alignment:center;"><a href="#" onClick="prev()">></a></div>

<div style="border:3px solid #ffa963; position:absolute; left:950px; top:420px;
width:100px; height:80px; z-index:3;  background-color:#ffffff;
font-size:30px; alignment:center;"><a href="#" onClick="next()"><</div>




</body>

</html>
