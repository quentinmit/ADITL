tBlockInit1
tBlockInit2
tBlockInit3
tBlockInit4
tBlockInit5
tBlockInit6
tBaseFragmentURL
<template>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"	
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">	
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<title>
A Day in the Life of MIT 2005
</title>

<link rel="SHORTCUT ICON" href="http://aditl.mit.edu/favicon.ico">

<style type="text/css">
body {
background-color:#ffffff;
color:#292929;
font-family:helvetica, sans-serif;
}

.timeline-main {
background-color:#eeeeee;
position:absolute;
left:50px;
top:200px;
width:800px;
height:200px;
}

.single-timeline {
background-color:#dddddd;
position:absolute;
width:200px;
height:15px;
}

.tiny-thumbnail {
position:absolute;
}

.timeline-block {
position:absolute;
width:200px;
height:200px;
}


</style>

<script>

//holds queue of div containers that hold the timeline
//should always be 8.
//middle 4 are displayed.
//6-8 are loaded / loading and ready to be moved
//1-2 are done and ready to be re-used.
var divContainers = new Array();

var blockMove = 0;

//end time being shown in timeline.
var endTime;

function initTimeline() {
endTime = 60;

loadXMLDoc('tBlockInit1', 'block1');
loadXMLDoc('tBlockInit2', 'block2');
loadXMLDoc('tBlockInit3', 'block3');
loadXMLDoc('tBlockInit4', 'block4');
loadXMLDoc('tBlockInit5', 'block5');
loadXMLDoc('tBlockInit6', 'block6');

divContainers.push('block6');
divContainers.push('block1');
divContainers.push('block2');
divContainers.push('block3');
divContainers.push('block4');
divContainers.push('block5');
}

function next() {
if(blockMove == 1) {
return;
}

blockMove = 1;
var nextId = divContainers.shift();
divContainers.push(nextId);

var nextToFill = document.getElementById(nextId);
nextToFill.style.left = "1000px";


var url = "tBaseFragmentURL";
var tstart = endTime + 30;
endTime += 15;
var tend = tstart + 15;

url = url + "\&start=" + tstart + "\&end=" + tend;

//alert(url);

moveElement('mainblock', 200, 0);

for(i = 0; i < 6; i++) {
    moveElement(divContainers[i], -200, 0);
}

moveElementStart('mainblock', -200, 0, -20, 0, 50);

loadXMLDoc(url, nextId);



}







//code for xmlHTTPRequest
var reqArray = new Array();
function loadXMLDoc(url, elementID) {
    var req;
    // branch for native XMLHttpRequest object
    if (window.XMLHttpRequest) {
        req = new XMLHttpRequest();
        req.onreadystatechange = processReqChanges;
        req.open("GET", url, true);
        req.send(null);
    // branch for IE/Windows ActiveX version
    } else if (window.ActiveXObject) {
        req = new ActiveXObject("Microsoft.XMLHTTP");
        if (req) {
            req.onreadystatechange = processReqChanges;
            req.open("GET", url, true);
            req.send();
        }
    }
    req.elementID = elementID;
    reqArray.push(req);
}

//checks for changes in any outstanding req's and 
//calls out to processReqChange to handle individual ones.
function processReqChanges() {
    var i;
    var req;
    for(i = 0; i < reqArray.length; i++) {
        req = reqArray[i];
        // only if req shows "loaded"
        if (req.readyState == 4) {
            // only if "OK"
            if (req.status == 200) {
	    //alert('xml came back');
                processReqChange(req);
	    
	        //remove this request since it's done yo.
	        reqArray.splice(i, 1);
            }
        }
    }
}

function processReqChange(req) {
    document.getElementById(req.elementID).innerHTML = req.responseText;
}










//animation stuff


//var speedup = 1.1;
//var slowdown = .9;

var speedup = 1;
var slowdown = 1;



var elementStatus = new Array();

function moveElementStart(element, dx, dy, dxstep, dystep, delay) {
    var i;
    for(i = 0; i < elementStatus.length; i++) {
        if(elementStatus[i].element == element) {
            return;
        }
    }

    var index = elementStatus.length;
    
    var el = document.getElementById(element);

    var left = parseInt(el.style.left);
    var top = parseInt(el.style.top);

    var status = new Object();

    status.finx = left + dx;
    status.finy = top + dy;
    status.halfx = Math.abs(status.finx - left) / 2;
    status.halfy = Math.abs(status.finy - top) / 2;
    status.dxstep = dxstep;
    status.dystep = dystep;
    status.effectivedx = dxstep;
    status.effectivedy = dystep;
    status.delay = delay;
    status.element = element;
    status.done = 0;

    elementStatus.push(status);

    setTimeout("moveElementInnerCallout(\"" + element + "\")", delay);
}

function moveElementInnerCallout(element) {
    var i = 0;
    for(i = 0; i < elementStatus.length; i++) {
        if(elementStatus[i].element == element) {
            moveElementInner(elementStatus[i]);
            break;
        }
    }

    //remove it.
    if(elementStatus[i].done == 1) {
        elementStatus.splice(i, 1);
    }
}


function moveElementInner(status) {
    var el = document.getElementById(status.element);
    var left = parseInt(el.style.left);
    var top = parseInt(el.style.top);


    //change effectivedx, dy
    if(Math.abs(left - status.finx) > status.halfx) {
        status.effectivedx = status.effectivedx * speedup;
    } else {
        status.effectivedx = status.effectivedx * slowdown;
    }

    if(status.effectivedx < status.dxstep) {
        status.effectivedx = status.dxstep;
    }

    //change effectivedx, dy
    if(Math.abs(top - status.finy) > status.halfy) {
        status.effectivedy = status.effectivedy * speedup;
    } else {
        status.effectivedy = status.effectivedy * slowdown;
    }

    if(status.effectivedy < status.dystep) {
        status.effectivedy = status.dystep;
    }


    var realdx = Math.abs(left - status.finx);
    var movex = (realdx < Math.abs(status.effectivedx))? status.finx - left : status.effectivedx;

    var realdy = Math.abs(top - status.finy);
    var movey = (realdy < Math.abs(status.effectivedy))? status.finy - top : status.effectivedy; 

    if(realdx != 0 || realdy != 0) {
        moveElement(status.element, movex, movey);
        setTimeout("moveElementInnerCallout(\"" + status.element + "\")", status.delay);
    } else {
        status.done = 1;
	blockMove = 0;
    }     
}
    

function moveElement(element, dX, dY) {
    var el = document.getElementById(element);
    var left = parseInt(el.style.left);
    var top = parseInt(el.style.top);

    left += dX;
    top += dY;

    el.style.left = left + "px";
    el.style.top = top + "px";
}
    


</script>

</head>
<body onLoad="initTimeline()">

<div class="timeline-main" id="mainblock" style="top:200px; left:50px;">

<div class="timeline-block" id="block1" style="background-color:#ffcccc; top:0px; left:0px;">
</div>

<div class="timeline-block" id="block2" style="background-color:#dfcccc; top:0px; left:200px;">
</div>

<div class="timeline-block" id="block3" style="background-color:#cfcccc; top:0px; left:400px;">
</div>

<div class="timeline-block" id="block4" style="background-color:#bfcccc; top:0px; left:600px;">
</div>

<div class="timeline-block" id="block5" style="background-color:#afcccc; top:0px; left:800px;">
</div>

<div class="timeline-block" id="block6" style="background-color:#9fcccc; top:0px; left:1000px;">
</div>

</div>

<a href="#" onClick="next()">next</a>



</body>

</html>
